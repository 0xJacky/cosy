kind: pipeline
type: docker
name: default

steps:
  - name: start
    image: fifsky/drone-wechat-work
    pull: always
    settings:
      url:
        from_secret: wecom_bot_url
      msgtype: markdown
      content: |
        #### 🎉 ${DRONE_REPO} 已提交，开始执行 CI/CD
        > Author: ${DRONE_COMMIT_AUTHOR}
        {{ if ne .Event "tag" -}}
        > Branch: ${DRONE_COMMIT_BRANCH}
        {{ end -}}
        > Event: ${DRONE_BUILD_EVENT}
        > Runner: ${DRONE_STAGE_MACHINE}
        > Commit: [{{ .Message }}](${DRONE_COMMIT_LINK})
        > [点击查看](${DRONE_BUILD_LINK})

  - name: postgres healthcheck
    image: postgres:latest
    commands:
      - while ! pg_isready -h postgres-server -U drone --quiet; do sleep 1; done

  - name: redis healthcheck
    image: redis:latest
    commands:
      - while ! redis-cli -h redis-server ping; do sleep 1; done

  - name: test
    image: golang:latest
    commands:
      - |
        echo '[app]
        PageSize = 20
        JwtSecret = c87047ba-f40b-447f-8da5-24ca617dca9a
        [server]
        Host = 127.0.0.1
        Port = 0
        RunMode = debug
        [database]
        User = drone
        Password = drone
        Host = postgres-server
        Port = 5432
        Name = drone
        [redis]
        Addr = redis-server:6379
        Password =
        DB = 0
        Prefix = cosy' > app.ini
      - go test -coverprofile=coverage.out ./...
      - go tool cover -func=coverage.out
    
    volumes:
      - name: go_cache
        path: /go/pkg

  - name: restore cache
    image: drillster/drone-volume-cache
    pull: if-not-exists
    volumes:
      - name: cache
        path: /cache  # fixed, can't be change
    settings:
      restore: true
      mount: # list of folders or files to cache
        - ./.pnpm-store

  - name: install dependencies
    image: node:latest
    pull: if-not-exists
    commands:
      - corepack enable
      - corepack prepare pnpm@latest --activate
      - pnpm config set store-dir .pnpm-store
      - pnpm install

  - name: rebuild cache
    image: drillster/drone-volume-cache
    pull: if-not-exists
    volumes:
      - name: cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./.pnpm-store

  - name: build docs
    image: node:latest
    pull: if-not-exists
    commands:
      - corepack enable
      - corepack prepare pnpm@latest --activate
      - pnpm config set store-dir .pnpm-store
      - pnpm docs:build

  - name: deploy docs
    image: drillster/drone-rsync
    pull: if-not-exists
    settings:
      hosts:
        from_secret: ssh_host_uozi_hk
      user:
        from_secret: ssh_username
      key:
        from_secret: ssh_key_uozi_hk
      source: ./docs/.vitepress/dist/*
      target: /var/www/cosy-docs
      delete: true

  - name: notify
    image: fifsky/drone-wechat-work
    pull: always
    settings:
      url:
        from_secret: wecom_bot_url
      msgtype: markdown
      content: |
        {{ if eq .Status "success" }}
        #### 🎉 ${DRONE_REPO} 构建成功
        {{ else }}
        #### ❌ ${DRONE_REPO} 构建失败
        {{ end }}
        > Author: ${DRONE_COMMIT_AUTHOR}
        > Event: ${DRONE_BUILD_EVENT}
        > Runner: ${DRONE_STAGE_MACHINE}
        > Commit: [{{ .Message }}](${DRONE_COMMIT_LINK})
        > [点击查看](${DRONE_BUILD_LINK})
    when:
      status: [ success, failure ]

services:
  - name: postgres-server
    image: postgres:latest
    environment:
      POSTGRES_DB: drone
      POSTGRES_USER: drone
      POSTGRES_PASSWORD: drone

  - name: redis-server
    image: redis:latest

volumes:
  - name: cache
    host:
      path: /tmp/pnpm_cache  # host volume absolute path

  - name: go_cache
    host:
      path: /tmp/go_cache  # host volume absolute path
